/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.5.1-660c2a2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace io.kubernetes.csharp.Model
{
    /// <summary>
    /// ServiceSpec describes the attributes that a user creates on a service.
    /// </summary>
    [DataContract]
    public partial class V1ServiceSpec :  IEquatable<V1ServiceSpec>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1ServiceSpec" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1ServiceSpec() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1ServiceSpec" /> class.
        /// </summary>
        /// <param name="ClusterIP">clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \&quot;None\&quot;, empty string (\&quot;\&quot;), or a valid IP address. \&quot;None\&quot; can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies.</param>
        /// <param name="DeprecatedPublicIPs">deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics.  This field is retained in the v1 API for compatibility until at least 8/20/2016.  It will be removed from any new API revisions.  If both deprecatedPublicIPs *and* externalIPs are set, deprecatedPublicIPs is used..</param>
        /// <param name="ExternalIPs">externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.  A previous form of this functionality exists as the deprecatedPublicIPs field.  When using this field, callers should also clear the deprecatedPublicIPs field..</param>
        /// <param name="ExternalName">externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName..</param>
        /// <param name="LoadBalancerIP">Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature..</param>
        /// <param name="LoadBalancerSourceRanges">If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\&quot; More info: http://kubernetes.io/docs/user-guide/services-firewalls.</param>
        /// <param name="Ports">The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies (required).</param>
        /// <param name="Selector">Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview.</param>
        /// <param name="SessionAffinity">Supports \&quot;ClientIP\&quot; and \&quot;None\&quot;. Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies.</param>
        /// <param name="Type">type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \&quot;ExternalName\&quot; maps to the specified externalName. \&quot;ClusterIP\&quot; allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \&quot;None\&quot;, no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \&quot;NodePort\&quot; builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \&quot;LoadBalancer\&quot; builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview.</param>
        public V1ServiceSpec(string ClusterIP = default(string), List<string> DeprecatedPublicIPs = default(List<string>), List<string> ExternalIPs = default(List<string>), string ExternalName = default(string), string LoadBalancerIP = default(string), List<string> LoadBalancerSourceRanges = default(List<string>), List<V1ServicePort> Ports = default(List<V1ServicePort>), Dictionary<string, string> Selector = default(Dictionary<string, string>), string SessionAffinity = default(string), string Type = default(string))
        {
            // to ensure "Ports" is required (not null)
            if (Ports == null)
            {
                throw new InvalidDataException("Ports is a required property for V1ServiceSpec and cannot be null");
            }
            else
            {
                this.Ports = Ports;
            }
            this.ClusterIP = ClusterIP;
            this.DeprecatedPublicIPs = DeprecatedPublicIPs;
            this.ExternalIPs = ExternalIPs;
            this.ExternalName = ExternalName;
            this.LoadBalancerIP = LoadBalancerIP;
            this.LoadBalancerSourceRanges = LoadBalancerSourceRanges;
            this.Selector = Selector;
            this.SessionAffinity = SessionAffinity;
            this.Type = Type;
        }
        
        /// <summary>
        /// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \&quot;None\&quot;, empty string (\&quot;\&quot;), or a valid IP address. \&quot;None\&quot; can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies
        /// </summary>
        /// <value>clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \&quot;None\&quot;, empty string (\&quot;\&quot;), or a valid IP address. \&quot;None\&quot; can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies</value>
        [DataMember(Name="clusterIP", EmitDefaultValue=false)]
        public string ClusterIP { get; set; }
        /// <summary>
        /// deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics.  This field is retained in the v1 API for compatibility until at least 8/20/2016.  It will be removed from any new API revisions.  If both deprecatedPublicIPs *and* externalIPs are set, deprecatedPublicIPs is used.
        /// </summary>
        /// <value>deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics.  This field is retained in the v1 API for compatibility until at least 8/20/2016.  It will be removed from any new API revisions.  If both deprecatedPublicIPs *and* externalIPs are set, deprecatedPublicIPs is used.</value>
        [DataMember(Name="deprecatedPublicIPs", EmitDefaultValue=false)]
        public List<string> DeprecatedPublicIPs { get; set; }
        /// <summary>
        /// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.  A previous form of this functionality exists as the deprecatedPublicIPs field.  When using this field, callers should also clear the deprecatedPublicIPs field.
        /// </summary>
        /// <value>externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.  A previous form of this functionality exists as the deprecatedPublicIPs field.  When using this field, callers should also clear the deprecatedPublicIPs field.</value>
        [DataMember(Name="externalIPs", EmitDefaultValue=false)]
        public List<string> ExternalIPs { get; set; }
        /// <summary>
        /// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName.
        /// </summary>
        /// <value>externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName.</value>
        [DataMember(Name="externalName", EmitDefaultValue=false)]
        public string ExternalName { get; set; }
        /// <summary>
        /// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
        /// </summary>
        /// <value>Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.</value>
        [DataMember(Name="loadBalancerIP", EmitDefaultValue=false)]
        public string LoadBalancerIP { get; set; }
        /// <summary>
        /// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\&quot; More info: http://kubernetes.io/docs/user-guide/services-firewalls
        /// </summary>
        /// <value>If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\&quot; More info: http://kubernetes.io/docs/user-guide/services-firewalls</value>
        [DataMember(Name="loadBalancerSourceRanges", EmitDefaultValue=false)]
        public List<string> LoadBalancerSourceRanges { get; set; }
        /// <summary>
        /// The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies
        /// </summary>
        /// <value>The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies</value>
        [DataMember(Name="ports", EmitDefaultValue=false)]
        public List<V1ServicePort> Ports { get; set; }
        /// <summary>
        /// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview
        /// </summary>
        /// <value>Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview</value>
        [DataMember(Name="selector", EmitDefaultValue=false)]
        public Dictionary<string, string> Selector { get; set; }
        /// <summary>
        /// Supports \&quot;ClientIP\&quot; and \&quot;None\&quot;. Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies
        /// </summary>
        /// <value>Supports \&quot;ClientIP\&quot; and \&quot;None\&quot;. Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies</value>
        [DataMember(Name="sessionAffinity", EmitDefaultValue=false)]
        public string SessionAffinity { get; set; }
        /// <summary>
        /// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \&quot;ExternalName\&quot; maps to the specified externalName. \&quot;ClusterIP\&quot; allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \&quot;None\&quot;, no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \&quot;NodePort\&quot; builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \&quot;LoadBalancer\&quot; builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview
        /// </summary>
        /// <value>type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \&quot;ExternalName\&quot; maps to the specified externalName. \&quot;ClusterIP\&quot; allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \&quot;None\&quot;, no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \&quot;NodePort\&quot; builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \&quot;LoadBalancer\&quot; builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V1ServiceSpec {\n");
            sb.Append("  ClusterIP: ").Append(ClusterIP).Append("\n");
            sb.Append("  DeprecatedPublicIPs: ").Append(DeprecatedPublicIPs).Append("\n");
            sb.Append("  ExternalIPs: ").Append(ExternalIPs).Append("\n");
            sb.Append("  ExternalName: ").Append(ExternalName).Append("\n");
            sb.Append("  LoadBalancerIP: ").Append(LoadBalancerIP).Append("\n");
            sb.Append("  LoadBalancerSourceRanges: ").Append(LoadBalancerSourceRanges).Append("\n");
            sb.Append("  Ports: ").Append(Ports).Append("\n");
            sb.Append("  Selector: ").Append(Selector).Append("\n");
            sb.Append("  SessionAffinity: ").Append(SessionAffinity).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as V1ServiceSpec);
        }

        /// <summary>
        /// Returns true if V1ServiceSpec instances are equal
        /// </summary>
        /// <param name="other">Instance of V1ServiceSpec to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V1ServiceSpec other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ClusterIP == other.ClusterIP ||
                    this.ClusterIP != null &&
                    this.ClusterIP.Equals(other.ClusterIP)
                ) && 
                (
                    this.DeprecatedPublicIPs == other.DeprecatedPublicIPs ||
                    this.DeprecatedPublicIPs != null &&
                    this.DeprecatedPublicIPs.SequenceEqual(other.DeprecatedPublicIPs)
                ) && 
                (
                    this.ExternalIPs == other.ExternalIPs ||
                    this.ExternalIPs != null &&
                    this.ExternalIPs.SequenceEqual(other.ExternalIPs)
                ) && 
                (
                    this.ExternalName == other.ExternalName ||
                    this.ExternalName != null &&
                    this.ExternalName.Equals(other.ExternalName)
                ) && 
                (
                    this.LoadBalancerIP == other.LoadBalancerIP ||
                    this.LoadBalancerIP != null &&
                    this.LoadBalancerIP.Equals(other.LoadBalancerIP)
                ) && 
                (
                    this.LoadBalancerSourceRanges == other.LoadBalancerSourceRanges ||
                    this.LoadBalancerSourceRanges != null &&
                    this.LoadBalancerSourceRanges.SequenceEqual(other.LoadBalancerSourceRanges)
                ) && 
                (
                    this.Ports == other.Ports ||
                    this.Ports != null &&
                    this.Ports.SequenceEqual(other.Ports)
                ) && 
                (
                    this.Selector == other.Selector ||
                    this.Selector != null &&
                    this.Selector.SequenceEqual(other.Selector)
                ) && 
                (
                    this.SessionAffinity == other.SessionAffinity ||
                    this.SessionAffinity != null &&
                    this.SessionAffinity.Equals(other.SessionAffinity)
                ) && 
                (
                    this.Type == other.Type ||
                    this.Type != null &&
                    this.Type.Equals(other.Type)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ClusterIP != null)
                    hash = hash * 59 + this.ClusterIP.GetHashCode();
                if (this.DeprecatedPublicIPs != null)
                    hash = hash * 59 + this.DeprecatedPublicIPs.GetHashCode();
                if (this.ExternalIPs != null)
                    hash = hash * 59 + this.ExternalIPs.GetHashCode();
                if (this.ExternalName != null)
                    hash = hash * 59 + this.ExternalName.GetHashCode();
                if (this.LoadBalancerIP != null)
                    hash = hash * 59 + this.LoadBalancerIP.GetHashCode();
                if (this.LoadBalancerSourceRanges != null)
                    hash = hash * 59 + this.LoadBalancerSourceRanges.GetHashCode();
                if (this.Ports != null)
                    hash = hash * 59 + this.Ports.GetHashCode();
                if (this.Selector != null)
                    hash = hash * 59 + this.Selector.GetHashCode();
                if (this.SessionAffinity != null)
                    hash = hash * 59 + this.SessionAffinity.GetHashCode();
                if (this.Type != null)
                    hash = hash * 59 + this.Type.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
